// <auto-generated />
using System;
using BlogProgrami.Data.Concrate.EntityFramework.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlogProgrami.Data.Migrations
{
    [DbContext(typeof(BlogProgramiContext))]
    partial class BlogProgramiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Etiket")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Icerik")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("MetaTag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("OkunmaSayisi")
                        .HasColumnType("int");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SeoAciklama")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("YorumSayisi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("KullaniciId");

                    b.ToTable("Makaleler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Baslik = "C# 9.0",
                            CategoryId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 837, DateTimeKind.Local).AddTicks(387),
                            Date = new DateTime(2021, 12, 14, 13, 45, 38, 836, DateTimeKind.Local).AddTicks(8554),
                            Etiket = "C#",
                            Icerik = "gdeggwhhwhwhewhwhwhwhhwhjwhwehhwehwehwehhwehwhwhh",
                            IsActive = true,
                            IsDeleted = false,
                            KullaniciId = 1,
                            MetaTag = "C#,C#9",
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 837, DateTimeKind.Local).AddTicks(1319),
                            ModifedByName = "InitialCreate",
                            Notlar = "JavaBlok Kategorisi",
                            OkunmaSayisi = 100,
                            Resim = "Default.jpeg",
                            SeoAciklama = "C# 9.0",
                            YorumSayisi = 1
                        },
                        new
                        {
                            Id = 2,
                            Baslik = "C# 9.0",
                            CategoryId = 2,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 837, DateTimeKind.Local).AddTicks(3803),
                            Date = new DateTime(2021, 12, 14, 13, 45, 38, 837, DateTimeKind.Local).AddTicks(3800),
                            Etiket = "c#",
                            Icerik = "gdeggwhhwhwhewhwhwhwhhwhjwhwehhwehwehwehhwehwhwhh",
                            IsActive = true,
                            IsDeleted = false,
                            KullaniciId = 1,
                            MetaTag = "C#,C#9",
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 837, DateTimeKind.Local).AddTicks(3806),
                            ModifedByName = "InitialCreate",
                            Notlar = "JavaBlok Kategorisi",
                            OkunmaSayisi = 100,
                            Resim = "Default.jpeg",
                            SeoAciklama = "C# 9.0",
                            YorumSayisi = 1
                        });
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "C# Programlama Dili",
                            Adi = "Csharp",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(794),
                            IsActive = true,
                            IsDeleted = false,
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(819),
                            ModifedByName = "InitialCreate",
                            Notlar = "C# Blok Kategorisi"
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "C++ Programlama Dili",
                            Adi = "Cplus",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(846),
                            IsActive = true,
                            IsDeleted = false,
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(848),
                            ModifedByName = "InitialCreate",
                            Notlar = "C++ Blok Kategorisi"
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Java Programlama Dili",
                            Adi = "Java",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(857),
                            IsActive = true,
                            IsDeleted = false,
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 843, DateTimeKind.Local).AddTicks(859),
                            ModifedByName = "InitialCreate",
                            Notlar = "JavaBlok Kategorisi"
                        });
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Yazi")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("nvarchar(3000)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.ToTable("Yorumlar");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 846, DateTimeKind.Local).AddTicks(7357),
                            IsActive = true,
                            IsDeleted = false,
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 846, DateTimeKind.Local).AddTicks(7382),
                            ModifedByName = "InitialCreate",
                            Notlar = "JavaBlok Kategorisi",
                            Yazi = "hhushshaıusıusahsusjhjsakjsajsjskj"
                        });
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("ModifeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Resim")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<byte[]>("SifreHash")
                        .IsRequired()
                        .HasColumnType("VARBINARY(500)");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("KullaniciAdi")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Kullaniciler");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "ilk Admin Kullanıcısı",
                            Adi = "Mustafa",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 861, DateTimeKind.Local).AddTicks(5580),
                            Email = "mustafaanlayan@tgmail.com",
                            IsActive = true,
                            IsDeleted = false,
                            KullaniciAdi = "mustafaanlayan",
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 861, DateTimeKind.Local).AddTicks(5606),
                            ModifedByName = "InitialCreate",
                            Notlar = "Admin Kullanıcısı",
                            Resim = "Defaultİmage",
                            RoleId = 1,
                            SifreHash = new byte[] { 48, 49, 57, 50, 48, 50, 51, 97, 55, 98, 98, 100, 55, 51, 50, 53, 48, 53, 49, 54, 102, 48, 54, 57, 100, 102, 49, 56, 98, 53, 48, 48 },
                            Soyadi = "ANLAYAN"
                        });
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifeDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notlar")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Roller");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "Admin Rolü Tüm Haklara Sahiptir",
                            Adi = "Admin",
                            CreatedByName = "InitialCreate",
                            CreatedDate = new DateTime(2021, 12, 14, 13, 45, 38, 849, DateTimeKind.Local).AddTicks(8395),
                            IsActive = true,
                            IsDeleted = false,
                            ModifeDateTime = new DateTime(2021, 12, 14, 13, 45, 38, 849, DateTimeKind.Local).AddTicks(8417),
                            ModifedByName = "InitialCreate",
                            Notlar = "Admin Rolüdür"
                        });
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Article", b =>
                {
                    b.HasOne("BlodProgrami.Entity.Concrete.Category", "Kategori")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlodProgrami.Entity.Concrete.Kullanici", "Kullanici")
                        .WithMany("Articles")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kategori");

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Comment", b =>
                {
                    b.HasOne("BlodProgrami.Entity.Concrete.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Kullanici", b =>
                {
                    b.HasOne("BlodProgrami.Entity.Concrete.Role", "Role")
                        .WithMany("Kullaniciler")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Article", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Kullanici", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("BlodProgrami.Entity.Concrete.Role", b =>
                {
                    b.Navigation("Kullaniciler");
                });
#pragma warning restore 612, 618
        }
    }
}
